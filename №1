class polymonial:
    def init(self, koef):
        while koef and koef[-1] == 0:
            koef.pop()
        self.koef = koef

    def str(self):
        # Вывод многочлена в консоль
        output = []
        for power, coef in enumerate(self.koef):
            if coef != 0:
                term = f"{coef}" if power == 0 else f"{coef}*x^{power}"
                output.append(term)
        print(" + ".join(reversed(output)) if output else "0")

    def print_polynomial(self):
        # Вывод многочлена в консоль
        output = []
        for power, coef in enumerate(self.koef):
            if coef != 0:
                term = f"{coef}" if power == 0 else f"{coef}*x^{power}"
                output.append(term)
        print(" + ".join(reversed(output)) if output else "0")

    def add(self,other):
        number_of_zeros = abs(len(self.koef)-len(other.koef))
        max_len = max(len(self.koef),len(other.koef))
        if len(self.koef) > len(other.koef):
           other.koef = other.koef + [0] * number_of_zeros
        else:
            self.koef = self.koef + [0] * number_of_zeros

        res = []
        for i in range(max_len):
            res.append(self.koef[i]+other.koef[i])
        return polymonial(res)

    def at_point(self,x):
        res = 0
        for i in range(len(self.koef)):
            p = self.koef[i] * x ** i
            res += p
        print(res)

    def derivative(self):
        new_koef = self.koef
        new_koef.pop(0)
        for i in range(len(new_koef)-1,-1,-1):
            new_koef[i] = (i+1) * new_koef[i]
        return polymonial(new_koef)

    def write_to_file(self, filename):
        with open(filename, 'w') as f:
            output = []
            for power, coef in enumerate(self.koef):
                if coef != 0:
                    term = f"{coef}" if power == 0 else f"{coef}*x^{power}"
                    output.append(term)
            record = " + ".join(reversed(output)) if output else "0"
            f.write(record)



print("Добро пожаловать в систему работы с многочленами!")
polynomials = []
flag = True

print("Создадим 2 многочлена")
coef1 = []
coef1 = list(map(int, input("Введите коэффициенты через пробел: ").split()))
coef2 = []
coef2 = list(map(int, input("Введите коэффициенты через пробел: ").split()))
p1 = polymonial(coef1)
p2 = polymonial(coef2)
print("Многочлены созданы.")


while flag:
    print("\nМеню:")
    print("1. Создать 2 многочлена")
    print("2. Вывести многочлены")
    print("3. Вычислить значение многочленов в точке")
    print("4. Найти производную многочленов")
    print("5. Сложить два многочлена")
    print("6. Записать многочлены в файл")
    print("7. Удалить многочлены")
    print("7. Выход")

    choice = input("Выберите действие (1-7): ")

    match choice:
        case '1':
            del p1
            del p2
            coef1 = list(map(int, input("Введите коэффициенты через пробел: ").split()))
            coef2 = list(map(int, input("Введите коэффициенты через пробел: ").split()))
            p1 = polymonial(coef1)
            p2 = polymonial(coef2)
            print("Многочлены созданы.")

        case '2':
            print('Многочлен 1:')
            p1.print_polynomial()
            print('Многочлен 2:')
            p2.print_polynomial()

        case '3':
            x = input('Введите точку')
            print('Многочлен 1:')
            p1.at_point(x)
            print('Многочлен 2:')
            p2.at_point(x)

        case '4':
            print('Многочлен 1:')
            p1.derivative()
            p1.print_polynomial()
            print('Многочлен 2:')
            p2.derivative()
            p2.print_polynomial()

        case '5':
            summa = p1+p2
            print(f'Сумма многочленов: {summa}')

        case '6':
            p1.write_to_file('p1.txt')
            print('Файл создан')
            p2.write_to_file('p2.txt')
            print('Файл создан')

        case '7':
            print("Выход из программы.")
            flag = False
